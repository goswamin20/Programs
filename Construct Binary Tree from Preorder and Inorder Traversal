/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if(preorder.length<1 || inorder.length<1 || preorder.length!=inorder.length){
            return null;  
        }
        return build(preorder, 0,inorder,0,inorder.length-1);
    }
    private TreeNode build(int [] preorder,int ps,int[] inorder,int is, int ie){
        if(ps>preorder.length-1 || is>ie){
            return null;
        }
        TreeNode root=new TreeNode(preorder[ps]);
        int i;
        for(i=is;i<=ie;i++){
            if(root.val==inorder[i]){
                break;
            }
        }
        
        root.left=build(preorder, ps+1 ,inorder,is,i-1);
        root.right=build(preorder, ps-is+i+1,inorder,i+1,ie);
        return root;
    }
}
