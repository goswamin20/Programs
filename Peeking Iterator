// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
class PeekingIterator implements Iterator<Integer> {
    // nextElem is the next element;
    // iter points to the the element after nextElement;
    
    // 
    
    
    // logically next
    private Integer nextElem = null;
    private Iterator<Integer> iter = null;
    
	public PeekingIterator(Iterator<Integer> iterator) {
        iter = iterator;
        if (iterator.hasNext()) {
            nextElem = iterator.next();
        }
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        return nextElem;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
        Integer res = nextElem;
        if (iter.hasNext()) {
            nextElem = iter.next();
        } else {
            nextElem = null;
        }
        return res;
	}

	@Override
	public boolean hasNext() {
	    return nextElem != null;
	}
}
